name: Build and Deploy to Cloud Run

on:
  push:
    branches:
    - main

env:
  SERVICE_NAME: fl-phonetics
jobs:
  build:
    name: Setup, Build, Push and Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: GCloud authenticate
      id: auth-setup
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        workload_identity_provider: '${{ secrets.GCP_WIP }}'
        service_account: '${{ secrets.GCP_ACCOUNT }}'

    - name: Login to GCR
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.GCP_REGISTRY }}
        username: oauth2accesstoken
        password: ${{ steps.auth-setup.outputs.access_token }}

    # - name: Configure Docker
    #   run: |
    #     gcloud --quiet auth configure-docker ${{ secrets.GCP_REGISTRY }}

    - name: Build container
      id: build
      run: |
        SHA_TAG="sha-${GITHUB_SHA::7}"
        echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
        dotnet publish -r linux-x64 -p:PublishProfile=DefaultContainer -p:ContainerRegistry=${{ secrets.GCP_REGISTRY }} -p:ContainerRepository=${{ secrets.GCP_REPOSITORY }}/$SERVICE_NAME -p:ContainerImageTag=$SHA_TAG

    - name: Deploy to Cloud Run
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        service: ${{ env.SERVICE_NAME }}
        image: "${{ secrets.GCP_REGISTRY }}/${{ secrets.GCP_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ steps.build.outputs.sha_tag }}"
        region: ${{ secrets.GCP_REGION }}
        flags: "--allow-unauthenticated"
